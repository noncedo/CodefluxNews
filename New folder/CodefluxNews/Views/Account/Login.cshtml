@using CodefluxNews.Models
@model LoginViewModel
@{
    ViewBag.Title = "Log in";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))

{
    @*@Html.AntiForgeryToken()*@
    
    <div class="container">
        <div class="card card-container" style="background-color:lightgrey">

            <img id="profile-img" class="profile-img-card" src="~/Content/login.png" />
            <label class="text-center">Login</label>
            <p id="profile-name" class="profile-name-card"></p>
            <form class="form-signin">
                <span id="reauth-email" class="reauth-email"></span>
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", placeholder = "Email" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                <br />
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", placeholder = "Password", type = "Password" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                <br />
                <div id="remember" class="checkbox">
                    <label>
                        <input type="checkbox" value="remember-me"> Remember me
                    </label>
                </div>
                <button class="btn btn-lg btn-primary btn-block btn-signin" type="submit">Sign In</button>
            </form>
            <br />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <a href="@Url.Action("ForgotPassword", "Account", new { })" class="forgot-password">
                Forgot the password?
            </a>
            <br />
            <a href="@Url.Action("#", new { })" class="reset-password">
                Reset password?
            </a>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}